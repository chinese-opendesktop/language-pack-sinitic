msgid ""
msgstr ""
"Project-Id-Version: kdevelop\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"PO-Revision-Date: 2014-01-13 20:38+0000\n"
"Last-Translator: Samir RibiÄ‡ <Unknown>\n"
"Language-Team: Bosnian <bs@li.org>\n"
"Language: bs\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Launchpad (build 17341)\n"
"X-Launchpad-Export-Date: 2015-02-15 06:09+0000\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"

msgid ""
"<b>$TMPFILE</b> will be replaced with the path to a temporary file. <br /"
">The code will be written into the file, the temporary <br />file will be "
"substituted into that position, and the result <br />will be read out of "
"that file. <br /><br /><b>$FILE</b> will be replaced with the path of the "
"original file. <br />The contents of the file must not be modified, changes "
"are allowed <br />only in $TMPFILE.<br /><br /><b>${PROJECT_NAME}</b> will "
"be replaced by the path of <br />the currently open project with the "
"matching name."
msgstr ""

msgid ""
"<b>Indent and Format Source Code.</b><br />This plugin allows using powerful "
"external formatting tools that can be invoked through the command-line.<br /"
">For example, the <b>uncrustify</b>, <b>astyle</b> or <b>indent</b> "
"formatters can be used.<br />The advantage of command-line formatters is "
"that formatting configurations can be easily shared by all team members, "
"independent of their preferred IDE."
msgstr ""

msgid ""
"<i>You can enter an arbitrary shell command.</i><br />The unformatted source-"
"code is reached to the command <br />through the standard input, and the "
"<br />formatted result is read from the standard output.<br /><br />If you "
"add <b>$TMPFILE</b> into the command, then <br />a temporary file is used "
"for transferring the code."
msgstr ""

msgid ""
"Description:<br /><b>kdev_format_source</b> is a script bundled with "
"KDevelop which allows using fine-grained formatting rules by placing meta-"
"files called <b>format_sources</b> into the file-system.<br /><br />Each "
"line of the <b>format_sources</b> files defines a list of wildcards followed "
"by a colon and the used formatting-command.<br /><br />The formatting-"
"command should use <b>$TMPFILE</b> to reference the temporary file to "
"reformat.<br /><br />Example:<br /><b>*.cpp *.h : myformatter $TMPFILE</"
"b><br />This will reformat all files ending with <b>.cpp</b> or <b>.h</b> "
"using the custom formatting script <b>myformatter</b>.<br /><br />Example: "
"<br /><b>subdir/* : uncrustify -l CPP -f $TMPFILE -c uncrustify.config -o "
"$TMPFILE</b> <br />This will reformat all files in subdirectory <b>subdir</"
"b> using the <b>uncrustify</b> tool with the config-file <b>uncrustify."
"config</b>."
msgstr ""

msgid "Gnu Indent: GNU"
msgstr ""

msgid "Gnu Indent: Kernighan & Ritchie"
msgstr ""

msgid "Gnu Indent: Original Berkeley indent style"
msgstr ""

msgid "Style: %1"
msgstr ""

msgctxt "@action:button"
msgid "More Variables"
msgstr ""

msgctxt "@label:textbox"
msgid "Command:"
msgstr ""

msgctxt "@title:window"
msgid "Variable Replacements"
msgstr ""

msgid "Clang Format"
msgstr ""

msgid ""
"Description:<br /><br /><b>clang-format</b> is an automatic source formater "
"by the LLVM project. It supports a variety of formatting style options via a "
"<b>.clang-format</b> configuration file, usually located in the project root "
"directory."
msgstr ""
